class Solution {

public int size(ListNode head){
    ListNode curr = head;
    int count = 0;
    while(curr!=null){
        count++;
        curr = curr.next;
    }
    return count;
}
public ListNode rotateRight(ListNode head, int k) {
    int length = size(head);
    
    if(length==0){
        return null;
    }
    
    if(k>=length){
        k %= length;
    }
    
    if(k==0||length==1){
        return head;
    }
    ListNode curr = new ListNode(0);
    curr.next = head;
    ListNode temp = head;
    ListNode slow = head;
    ListNode fast = head;
    
    for(int i = 0; i<k; i++){
        fast = fast.next;
    }
    while(fast.next != null){
        slow = slow.next;
        fast = fast.next;
    }
    
    curr.next = slow.next;
    slow.next = null;
    fast.next = temp;
    
    return curr.next;
}
}
