class Solution {
    public ListNode middle(ListNode head) {
        ListNode fast=head;
        ListNode slow=head;
        while(fast.next!=null && fast.next.next!=null){
            fast=fast.next.next;
            slow=slow.next;
            
        }
        return slow;
    }
    
    public ListNode reverse(ListNode head){
        ListNode prev=null;
        ListNode curr=head;
        while(curr!=null){
            ListNode nextNode=curr.next;
            curr.next=prev;
            prev=curr;
            curr=nextNode;
        }
        return prev;
    }
    public boolean isPalindrome(ListNode head) {
        if(head==null || head.next==null){
            return true;
        }
        ListNode mid=middle(head);
        ListNode secHalf=reverse(mid.next);
        ListNode firHalf=head;
        
        while(secHalf!=null){
            if(firHalf.val!=secHalf.val){
                return false;
            }
            firHalf=firHalf.next;
            secHalf=secHalf.next;
        }
        return true;
    }
}
