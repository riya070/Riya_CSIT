class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        
        Queue<TreeNode> queue = new LinkedList<>();
        Stack<TreeNode> stack = new Stack<TreeNode>();

        int level = 0;
        
        if(root!=null){
            queue.add(root);
        }
        
        
        while(!queue.isEmpty()){
            List<Integer> levelList = new ArrayList<Integer>();
            int queueSize = queue.size();
            
            for(int i=0; i<queueSize; i++){
                TreeNode node = queue.poll();
                
                if(node != null){
                    levelList.add(node.val);
                    if(level%2 == 0){
                        stack.push(node.left);
                        stack.push(node.right);

                    }else{
                        stack.push(node.right);
                        stack.push(node.left);
                    }
                    
                }
            }
            
            while(!stack.isEmpty()){
                queue.add(stack.pop());
            }
            
            if(!levelList.isEmpty()){
                result.add(levelList);
            }
            level++;
        }
        
        return result;
    }
}
